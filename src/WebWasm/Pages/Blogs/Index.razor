@page "/Blogs"
@using Application.Queries.GetBlogsWithPagination
@using Application.Common.Models
@inject IBlogHttpClient _client

<PageTitle>Blogs</PageTitle>

<h1 class="mb-4 h2">Blogs</h1>

<MudPaper Class="d-flex mb-5 p-3" Elevation="4">
    <MudSpacer />
    <MudButton class="ms-auto font-monospace" Href="/blogs/insert" Variant="Variant.Filled" EndIcon="@(Icons.Material.Filled.Add)" Color="Color.Primary">Insert</MudButton>
</MudPaper>

@if (Blogs is null)
{
    <LoadingCircular />
}
else if(Blogs.Items.Any())
{
    <MudTable FixedHeader="true" Dense="true" Striped="true" Hover="true" Items="Blogs.Items" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<BlogBriefDto, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="string">Poster</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<BlogBriefDto, object>(x=>x.Title)">Title</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Id</MudTd>
            <MudTd DataLabel="Image">@context.PosterImage</MudTd>
            <MudTd DataLabel="Title">@context.Title</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{10, 20, 50, 80, 100}" />
        </PagerContent>
    </MudTable>
}
else
{
    <NoContent Title="There is no blog to display!" />
}

@code
{
    private PaginatedList<BlogBriefDto> Blogs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Blogs = await _client.GetWithPaginationAsync(new() {ExcludeNonPublic = false, PageNumber = 1, PageSize = 10});
    }
}