@page "/Categories/insert"
@inject ICategoryHttpClient _client
@using Weblog.Application.Commands.CreateCategory
@inject NavigationManager NavigationManager

<PageTitle>Categories > Insert</PageTitle>

<h1 class="mb-4 h2"><RoutsWithOrder Headers=@(new string[] {"Categories", "Insert"}) /></h1>

<EditForm Model="Form" OnValidSubmit="OnSubmit">
    <FluentValidator></FluentValidator>

    <div class="form-group mb-3 col-md-6">
        <MudTextField id="name" @bind-Value="Form.Name" T="string" Label="Name" Variant="Variant.Outlined" Margin="Margin.Dense" />
        <ValidationMessage For="() => Form.Name"></ValidationMessage>
    </div>
    <div class="form-group mb-3 col-md-6">
        <MudTextField id="urlName" @bind-Value="Form.UrlName" T="string" Label="Url Name" Variant="Variant.Outlined" Margin="Margin.Dense" />
        <ValidationMessage For="() => Form.UrlName"></ValidationMessage>
    </div>
    <div class="form-group mb-3 col-md-6">
        <MudTextField id="description" @bind-Value="Form.Description" T="string" Label="Description" Variant="Variant.Outlined" Lines="3" Margin="Margin.Dense" />
        <ValidationMessage For="() => Form.Description"></ValidationMessage>
    </div>
    
    <div class="form-group">
        <MudButton ButtonType="ButtonType.Submit" class="font-monospace" Variant="Variant.Filled" EndIcon="@(Icons.Material.Filled.Check)" Color="Color.Success">Insert</MudButton>
    </div>
</EditForm>

@code
{
    private CreateCategoryCommand Form { get; set; } = new();

    private async Task OnSubmit(EditContext context)
    {
        try
        {
            var id = await _client.CreateAsync(Form);
            NavigationManager.NavigateTo("/Categories");
        }
        catch (System.Exception ex)
        {
            Console.WriteLine("This is the error: " + ex);
        }
    }
}